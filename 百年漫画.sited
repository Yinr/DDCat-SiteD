<!--?xml version="1.0" encoding="UTF-8" ?-->
<sited ver="14" debug="1" engine="34" schema="1">
    <meta>
    <ua>Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko)</ua>
    <guid>95031dd97f1b4e19b44859f9c1637d20</guid>
    <title>百年漫画</title>
    <author>Yinr</author>
    <contact>yinr@yinr.cc</contact>
    <intro>[漫画] 百年漫画网专注百年漫画，言情漫画，少女爱情等类型的漫画。百年漫画网第一时间更新天才小毒妃漫画，大角虫漫画，王牌校草漫画，指染成婚漫画等好看的漫画，看百年、少女爱情等类型漫画最好的网站！</intro>
    <alert></alert>
    <url>https://m.bnmanhua.com/</url>
    <expr>m\.bnmanhua\.com|m\.bnman\.net</expr>
    <logo>https://m.bnman.net/favicon.ico</logo>
    <encode>UTF-8</encode>
    <about title="关于" mail="yinr@yinr.cc">
        <item title="插件开发者：@Yinr" />
        <item />
        <item txt="点击右下角或复制邮箱反馈问题" />
        <item url="yinr@yinr.cc" />
        <item />
        <item txt="点击或扫码对[Yinr]支付宝打赏" expr="https://qr.alipay.com/tsx072676oy3djrgrp1hvcf" logo="https://cloud.yinr.cc/s/FjN52G3snrTqj8S/download" />
        <item txt="扫码使用微信打赏" logo="https://cloud.yinr.cc/s/SkmGBzxkeZoXNGb/download" />
    </about>
    </meta>
    <main dtype="1" btag="漫画" durl="https://m.bnman.net/comic.html">
        <home>
            <hots cache="1d" showImg="1" w="3" h="4" method="get"
                  title="排行"
                  parse="index_parse"
                  url="https://m.bnman.net/page/hot/1.html" />
            <updates cache="1d" showImg="1" w="3" h="4" method="get"
                     title="更新"
                     parse="index_parse"
                     url="https://m.bnman.net/page/new/1.html" />
            <tags cache="1d"
                  title="分类"
                  parse="tags_parse"
                  url="https://m.bnman.net/page/list.html" />
        </home>

        <search cache="0" method="get" parse="index_parse" url="https://m.bnman.net/search/@key/@page.html" header="cookie $$ referer" />

        <tag cache="10m" showImg="1" w="3" h="4" method="get" parse="tag_parse" />

        <book cache="1d" method="get" header="cookie $$ referer"
              buildUrl="build_url" buildWeb="build_url"
              parse="book_parse" />

        <section cache="1d" method="get" parse="section_parse" header="cookie $$ referer" />
    </main>
    <script>
        <require>
            <item url="http://sited.noear.org/addin/js/cheerio.js" lib="cheerio" />
        </require>
        <code>
            <![CDATA[
var mainHost = "https://m.bnman.net";

function urla(url, host) {
    host = host || mainHost;
    host = host.replace(/\/$/, '');

    var u = decodeURI(url);

    if (u.indexOf("http") < 0) {
        if (u.substr(0, 2) != '//') {
            if (u.substr(0, 1) != '/') u = host + '/' + u;
            else u = host + u;
        } else {
            u = 'http:' + u;
        }
    }

    return encodeURI(u);
}

function build_url(url) {
    return url.replace(/^https?:\/\/[^\/]+/i, mainHost);
}

function index_parse(url, html) {
    var $ = cheerio.load(html);
    var list = [];

    $('#list_img li > a').each(function () {
        var book = $(this);
        var bm = {};
        bm.name = book.children('p').text();
        bm.url = urla(book.attr('href'));
        bm.logo = book.children('img').attr('src');
        bm.author = "";
        bm.status = "";
        bm.newSection = book.children('span').text();
        bm.updateTime = book.children('em').text();
        bm.btag = "漫画";
        list.push(bm);
    });

    return JSON.stringify(list);
}

function tags_parse(url, html) {
    var $ = cheerio.load(html);
    var list = [];

    $('div.tbox.tabs').each(function () {
        var group = $(this);

        var gname = group.find('h3').text().trim();
        if (gname != "友情链接") {
            list.push({'group': gname});

            group.find('ul > li > a').each(function () {
                var item = $(this);
                list.push({'title': item.text(),
                           'url': urla(item.attr('href').replace('.html', '/@page.html'))});
            });
        }
    });

    return JSON.stringify(list);
}

function tag_parse(url, html) {
    var $ = cheerio.load(html);
    var list = [];

    $('li.vbox').each(function () {
        var book = $(this);
        var bm = {};
        var book_title = book.find('a');
        bm.name = book_title.text();
        bm.url = urla(book_title.attr('href'));
        bm.logo = book.find('mip-img').attr('src');
        bm.author = "";
        bm.status = "";
        bm.newSection = book.find('span').text();
        bm.updateTime = "";
        list.push(bm);
    });

    return JSON.stringify(list);
}

function book_parse(url, html) {
    var $ = cheerio.load(html);
    var data = {};

    data.name = $('.data > h4').text();
    data.author = $('.dir').text().substr(3);
    data.intro = $('.tbox_js').text();
    data.logo = $('.img > mip-img').attr('src');
    data.updateTime = $('.act').text().substr(3,10);

    if ($('.banquan').length > 0) {
        print('由于版权原因，' + data.name + ' 已下架，请尝试搜索其他插件观看。');
        data.sections = [{'name': '已下架，请尝试搜索其他插件观看。'}]
        return JSON.stringify(data);
    }

    /*data.isSectionsAsc = 1;*/
    var sections = [];

    $('.list_block > li > a').each(function () {
        var sectionItem = $(this);
        if (sectionItem.attr('target') != '_blank') {
            sections.push({
                'name': sectionItem.text(),
                'url': urla(sectionItem.attr('href'))
            });
        }
    });

    data.sections = sections;
    return JSON.stringify(data);
}

function section_parse(url, html) {
    var $ = cheerio.load(html);
    var list = [];

    var scriptText = $('body > script').filter(function(i, el) {return $(el).text().length > 100}).eq(0).text();
    var imgScript = $('script:contains("z_img")').text();
    var z_yurl = '', listText = '', play = '';
    z_yurl = 'https://img.hngxgt.net/';
    listText = scriptText.match(/(?:z_img=')([^']+)(?:';)/)[1];
    try {play = scriptText.match(/(?:play=')([^']+)(?:';)/)[1];} catch (e) {}
    list = eval('(' + listText + ')');
    list = list.map(function(imgurl) {

        var getPath = function(url) {
            return url.replace(/http:\/\//, "").replace(/https:\/\//, "");
        }

        if (imgurl.indexOf('http') > -1) {
            if (play) imgurl = '/pic-' + play + '/' + getPath(imgurl);
        } else {
            if (z_yurl) imgurl = z_yurl + imgurl;
        }

        /* fix host error of image url */
        var urlStart = imgurl.lastIndexOf("https://");
        if (urlStart > 0) {
            imgurl = imgurl.substr(urlStart);
        }

        return urla(imgurl, mainHost);
    });

    return JSON.stringify(list);
}

            ]]>
        </code>
    </script>
</sited>
